# from node-osc package
# This is a basic workflow that is manually triggered

name: Bump version

# Controls when the action will run. Workflow runs when manually triggered using the UI
# or API.
on:
  workflow_dispatch:
    inputs:
      version_override:
        description: 'The version to release. If not specified, the version will be inferred'
        required: false
        default: ''
      bump_version:
        type: boolean
        description: 'Whether to automatically bump and commit the version after the release'
        required: true
        default: true

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "bump-version"
  bump-version:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - uses: actions/checkout@v3
          # https://github.com/actions/checkout/issues/766
        - name: Mark Git directory as Safe
        run: |
          git config --global --add safe.directory "$GITHUB_WORKSPACE"
      - name: Check out source
        uses: actions/checkout@v2
        with:
          ssh-key: ${{ secrets.DEPLOY_KEY }}
      - name: Read Version
          id: read_version
          run: |
            if [ -n "${{ github.event.inputs.version_override }}" ]; then
              echo "Using version override: ${{ github.event.inputs.version_override }}"
              version=${{ github.event.inputs.version_override }}
            else
              version=$(cat package.json \
                       | grep version \
                       | head -1 \
                       | awk -F: '{ print $2 }' \
                       | sed 's/[",]//g')
            fi
            echo "version=$version" >> $GITHUB_OUTPUT
            if [[ $version == *alpha* || $version == *beta* || $version == *rc* ]]; then
                echo "is_prerelease=true" >> $GITHUB_OUTPUT
            else
                echo "is_prerelease=false" >> $GITHUB_OUTPUT
            fi
      - name: Push Tag
          run: |
            git config user.name "${GITHUB_ACTOR}"
            git config user.email "${GITHUB_ACTOR}@users.noreply.github.com"
            git tag -a "${tag}" -m "${message}"
            git push origin "${tag}"
      env:
        tag: v${{ steps.read_version.outputs.version }}
        message: Release v${{ steps.read_version.outputs.version }}

      - name: Bump Version
        if: ${{ github.event.inputs.bump_version == 'true' }}
        run: |
          version=${{ steps.read_version.outputs.version }}
          is_prerelease=${{ steps.read_version.outputs.is_prerelease }}
          major=$(echo $version | cut -d. -f1)
          minor=$(echo $version | cut -d. -f2)
          patch=$(echo $version | cut -d. -f3)
          if [[ $is_prerelease == "true" ]]; then
            prerelease=$(echo $version | cut -d- -f2)
            prerelease_number=$(echo $prerelease | cut -d0 -f2)
            new_prerelease_number=$((prerelease_number + 1))
            new_prerelease=$(echo $prerelease | sed "s/$prerelease_number/$new_prerelease_number/")
            new_version="$major.$minor.$patch-$new_prerelease"
          else
            patch=$((patch + 1))
            new_version="$major.$minor.$patch-SNAPSHOT"
          fi
          echo $new_version > ./lib/VERSION

          git config --local user.email "${{ github.actor }}@users.noreply.github.com"
          git config --local user.name "${{ github.actor }}"
          git add ./lib/VERSION
          git commit -m "Prepare for next development iteration"
          git push
      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '16'

      - name: Install npm packages
        run: npm ci

      - name: Setup Git
        run: |
          git config user.name '${{secrets.MAINTAINER_NAME}}'
          git config user.email '${{secrets.MAINTAINER_EMAIL}}'
      - name: bump version
        run: npm version ${{ github.event.inputs.version }}

      - name: Push latest version
        run: git push origin main --follow-tags
